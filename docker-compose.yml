# Nexus MCP Server - Docker Compose Configuration
services:
  nexus-mcp:
    build:
      context: .
      dockerfile: Dockerfile
    image: nexus-mcp-server:latest
    container_name: nexus-mcp-server
    
    # Configurazione di rete per MCP
    network_mode: "host"
    
    # Mount dei volumi per persistenza dati
    volumes:
      # Monta la directory safe_files per accesso ai file
      - ./safe_files:/app/safe_files:rw
      # Monta la configurazione (read-only)
      - ./config.json:/app/config.json:ro
      # Mount per log personalizzati (opzionale)
      - ./logs:/app/logs:rw
    
    # Variabili d'ambiente
    environment:
      - PYTHONUNBUFFERED=1
      - MCP_SERVER_NAME=NexusServer
      - MCP_SERVER_VERSION=2.0.0
      - LOG_LEVEL=INFO
    
    # Politica di restart
    restart: unless-stopped
    
    # Limiti di risorse
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Labels per organizzazione
    labels:
      - "com.nexus.service=mcp-server"
      - "com.nexus.version=2.0.0"
      - "com.nexus.description=Advanced MCP Server"

  # Servizio opzionale per monitoring (Portainer-style)
  nexus-monitor:
    image: prom/prometheus:latest
    container_name: nexus-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - nexus-mcp
    profiles:
      - monitoring
    restart: unless-stopped

# Configurazione reti (se necessario)
networks:
  default:
    name: nexus-network
    driver: bridge

# Volumi persistenti
volumes:
  nexus-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data